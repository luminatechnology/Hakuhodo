<Sql TableName="F_UsedExpense" SqlScriptPriority="2" CustomScript="#CDATA">
    <CDATA name="CustomScript"><![CDATA[CREATE OR ALTER FUNCTION dbo.F_UsedExpense(
	@CompanyID int,
	@ProjectID int,
	@TaskID int = null,
	@InventoryID int = null, 
	@AccountGroupID int= null)
RETURNS decimal(18,3)
AS
BEGIN
	DECLARE @PO_Amount decimal(18,3);-- 在途PO
	DECLARE @AP_Amount decimal(18,3);-- 在途AP & 實際AP (AP明細對應專案 + 專案任務 的金額)
	DECLARE @AP_SelfAmount decimal(18,3);-- 自建AP (AP明細對應專案 + 專案任務 的 金額)
	DECLARE @EP_Amount decimal(18,3);-- EP在途 費用申請EP301000 status not in (H,C,R) 明細對應專案 + 專案任務 的 收據總額-稅額)

	DECLARE @ReturnValue decimal(18,3);

	--=== EP在途 ===
	SELECT 
		@EP_Amount = SUM(e.CuryExtCost - e.CuryTaxTotal)
	FROM PMTask t
	Inner Join EPExpenseClaimDetails e on t.CompanyID =e.companyID
		and t.TaskID = e.TaskID
		and t.ProjectID = e.ContractID
	Inner Join EPExpenseClaim ec on e.CompanyID =ec.companyID
		and e.RefNbr = ec.RefNbr
	Inner Join Account a on e.CompanyID = a.CompanyID
		and e.ExpenseAccountID = a.AccountID
	Where t.CompanyID = @CompanyID
	And t.ProjectID = @ProjectID
	And ec.Status not In('H','C','R')
	--單筆處理
	And(@TaskID is null Or t.TaskID = @TaskID) -- taskID
	And(@InventoryID is Null Or e.InventoryID = @InventoryID)--InventoryID
	And(@AccountGroupID is Null Or a.AccountGroupID = @AccountGroupID)--AccountGroup
	;
	

	--=== PO在途 ===
	SELECT 
		@PO_Amount = SUM(l.CuryExtCost)
	FROM PMTask t 
	Inner Join POOrder o on t.CompanyID = o.CompanyID
		and t.ProjectID = o.ProjectID
	Inner Join POLine l on o.CompanyID = l.CompanyID
		and o.OrderNbr = l.OrderNbr
		and t.TaskID = l.TaskID
	Inner Join Account a on l.CompanyID = a.CompanyID
		and l.ExpenseAcctID = a.AccountID
	Where t.CompanyID = @CompanyID
		and t.ProjectID = @ProjectID
		and o.Status not in ('H','V','L','C')
		--單筆處理
		And(@TaskID is null Or t.TaskID = @TaskID) -- taskID
		And(@InventoryID is Null Or l.InventoryID = @InventoryID)--InventoryID
		And(@AccountGroupID is Null Or a.AccountGroupID = @AccountGroupID)--AccountGroup
	;

	--== 在途+實際AP==
	SELECT 
		@AP_Amount = SUM(apt.CuryTranAmt)
	FROM PMTask t 
	Inner Join POOrder o on t.CompanyID = o.CompanyID
		and t.ProjectID = o.ProjectID
	Inner Join POLine l on o.CompanyID = l.CompanyID
		and o.OrderNbr = l.OrderNbr
		and t.TaskID = l.TaskID
	Inner Join APTran apt on o.CompanyID = apt.CompanyID
		and o.ProjectID = apt.ProjectID
		and t.TaskID = apt.TaskID
		and o.OrderNbr = apt.PONbr
	Inner Join Account a on apt.CompanyID = a.CompanyID
		and apt.AccountID = a.AccountID
	Where t.CompanyID = @CompanyID
		and t.ProjectID = @ProjectID
		--單筆處理
		And(@TaskID is null Or t.TaskID = @TaskID) -- taskID
		And(@InventoryID is Null Or apt.InventoryID = @InventoryID)--InventoryID
		And(@AccountGroupID is Null Or a.AccountGroupID = @AccountGroupID)--AccountGroup
		;


	--== 自建AP==
	SELECT 
		@AP_SelfAmount = SUM(apt.CuryTranAmt * (case when apt.TranType <> 'ADR' then 1 else -1 end))
		--(DocType:INV、PPM、ACR用加的) 、 (DocType:ADR 用扣的)
	FROM PMTask t 
	Inner Join POOrder o on t.CompanyID = o.CompanyID
		and t.ProjectID = o.ProjectID
	Inner Join POLine l on o.CompanyID = l.CompanyID
		and o.OrderNbr = l.OrderNbr
		and t.TaskID = l.TaskID
	Inner Join APTran apt on o.CompanyID = apt.CompanyID
		and o.ProjectID = apt.ProjectID
		and t.TaskID = apt.TaskID
		and apt.PONbr is null -- 自建不會有PONbr
	Inner Join Account a on apt.CompanyID = a.CompanyID
		and apt.AccountID = a.AccountID
	Where t.CompanyID = @CompanyID
		and t.ProjectID = @ProjectID
		--單筆處理
		And(@TaskID is null Or t.TaskID = @TaskID) -- taskID
		And(@InventoryID is Null Or apt.InventoryID = @InventoryID)--InventoryID
		And(@AccountGroupID is Null Or a.AccountGroupID = @AccountGroupID)--AccountGroup
		;
		

	IF @PO_Amount is null Set @PO_Amount = 0 ;
	IF @AP_Amount is null Set @AP_Amount = 0 ;
	IF @AP_SelfAmount is null Set @AP_SelfAmount = 0 ;
	IF @EP_Amount is null Set @EP_Amount = 0 ;

	--Max(在途PO - (在途AP + 實際AP),0) +  (在途AP + 實際AP)  + (在途EP + 自建AP)
	IF @PO_Amount > @AP_Amount Set @ReturnValue = @PO_Amount
	ELSE Set @ReturnValue = @AP_Amount;

	Set @ReturnValue = @ReturnValue + (@EP_Amount + @AP_SelfAmount);

    RETURN @ReturnValue;
END;]]></CDATA>
</Sql>